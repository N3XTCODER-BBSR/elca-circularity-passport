services:
  db:
    image: 'postgres:16.3-alpine'
    restart: always
    ports:
      - '65432:5432'
    environment:
      POSTGRES_DB: building_passport
      POSTGRES_USER: building_passport
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U building_passport -d building_passport"]
      interval: 10s
      timeout: 5s
      retries: 5

  legacy-db:
    image: 'postgres:13-alpine'
    restart: always
    ports:
      - '65433:5432'
    environment:
      POSTGRES_DB: elca
      POSTGRES_USER: elca # HINT: this is the superuser, elca_read_only is the read only user
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U elca -d elca"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./legacy_db_data:/var/lib/postgresql/data
      - ./sql_scripts/elca_db_init.sql:/docker-entrypoint-initdb.d/elca_db_init.sql # HINT: scripts in docker-entrypoint-initdb.d will be run on container startup

  app-e2e-tests:
    profiles:
      - e2e-tests
    build: 
      context: .
      dockerfile: Dockerfile.e2e
      args:
        DATABASE_URL: ${DATABASE_URL}
        ELCA_LEGACY_DATABASE_URL: ${ELCA_LEGACY_DATABASE_URL}
        ELCA_LEGACY_DATABASE_HAS_SSL: ${ELCA_LEGACY_DATABASE_HAS_SSL}
        DOPPIO_API_KEY: ${DOPPIO_API_KEY}
        HTTP_BASIC_AUTH: ${HTTP_BASIC_AUTH}
        NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
        NEXT_PUBLIC_PASSPORT_BASE_URL: ${NEXT_PUBLIC_PASSPORT_BASE_URL}
        NEXT_TELEMETRY_DISABLED: ${NEXT_TELEMETRY_DISABLED}
        PRISMA_TELEMETRY_DISABLED: ${PRISMA_TELEMETRY_DISABLED}
    command: sh -c "yarn prisma:generate && npx prisma migrate deploy && PORT=3005 yarn start"
    environment:
      DATABASE_URL: postgres://building_passport:password@e2e-db:5432/building_passport
      ELCA_LEGACY_DATABASE_URL: postgres://elca_read_only:password@e2e-legacy-db:5432/elca
      NEXTAUTH_URL: http://localhost:3005
    depends_on:
      - e2e-db
      - e2e-legacy-db
    ports:
      - '3005:3005'
    env_file: .env.e2e_tests

  e2e-db:
    profiles:
      - e2e-tests
    image: 'postgres:16.3-alpine'
    restart: always
    ports:
      - '65434:5432'
    environment:
      POSTGRES_DB: building_passport
      POSTGRES_USER: building_passport
      POSTGRES_PASSWORD: password

  e2e-legacy-db:
    profiles:
      - e2e-tests
    image: 'postgres:13-alpine'
    restart: always
    ports:
      - '65435:5432'
    environment:
      POSTGRES_DB: elca
      POSTGRES_USER: elca # HINT: this is the superuser, elca_read_only is the read only user
      POSTGRES_PASSWORD: password
    volumes:
      - ./sql_scripts/elca_db_init.sql:/docker-entrypoint-initdb.d/01_elca_db_init.sql # HINT: the elca_db_init.sql script runs when the container is created. It only runs if ./legacy_db_data doesn't contain data so that the database has not been initialized before
      - ./sql_scripts/create_read_only_user.sql:/docker-entrypoint-initdb.d/02_create_read_only_user.sql
